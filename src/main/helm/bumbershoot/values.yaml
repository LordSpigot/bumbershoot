---
## replicaCount amount of replicas to start 
replicaCount: 1
deployment:
  image:
    ## deployment.image.repositoy repository to pull bumbershoot image from
    repository: deviceinsight
    ## deployment.image.pullPolicy docker pull policy to apply for the bumbershoot image
    pullPolicy: IfNotPresent
  ## deployment.singletonPerNode flag if deployment should guarantee that there is a single replica per node
  singletonPerNode: true

## resources required by the application. This is directly expanded into the deployment chart
resources:
  requests:
    cpu: 50m
    memory: 60Mi
  limits:
    memory: 300Mi

## javaOptions jvm arguments send to the java process
javaOptions: -Xms32m -Xmx256m

probes:
  ## probes.readinessProbe for the application. This is directly expanded into the deployment chart
  readinessProbe:
    tcpSocket:
        port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 1
  ## probes.livenessProbe for the application. This is directly expanded into the deployment chart
  livenessProbe:
    tcpSocket:
        port: 8080
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3

service:
  ## service.type type of service to install
  type: ClusterIP
  ## service.port port the service should expose as http port
  port: 8080

ingress:
  ## ingress.enabled if 'true' install an ingress route
  enabled: true
  ## ingress.path http path bumbershoot should be exposed at. If this is changed, remember you will need a rewrite annoation.
  path: /api/charts
  ## ingress.annotations annotations to inject in the ingress. Can be used for authentication or rewrites. Check the documentation of your ingress controller
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /

logging:
  ## logging.level.<namespace> logging level to apply for the given namespace
  level:
    com.deviceinsight.bumbershoot: DEBUG

## charts that bumbershoot should manage
managedCharts: []
#  - name: umbrella-chart
#    defaultUpgradePolicy: MINOR
#    upgradePolicies:
#      sub-chart: NEVER
#    repository:
#      url: https://charts.sample
#      type: chartmuseum

## nodeSelector to apply to the deployment
nodeSelector: {}

################
# dependencies #
################
swift:
  nameOverride: swift-tiller-proxy
  enableAnalytics: false

###########
# globals #
###########

global: {}